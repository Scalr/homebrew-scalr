name: Auto-update Formula

on:
  schedule:
    # Check for new releases daily at 9 AM UTC
    - cron: '0 9 * * *'
  workflow_dispatch:

jobs:
  check-for-updates:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Get latest scalr-cli release
      id: latest-release
      run: |
        LATEST_VERSION=$(curl -s https://api.github.com/repos/Scalr/scalr-cli/releases/latest | jq -r '.tag_name' | sed 's/^v//')
        echo "version=${LATEST_VERSION}" >> "$GITHUB_OUTPUT"
        echo "Latest scalr-cli version: ${LATEST_VERSION}"
    
    - name: Get current formula version
      id: current-version
      run: |
        CURRENT_VERSION=$(grep -o 'archive/refs/tags/v[0-9.]*' Formula/scalr.rb | sed 's/archive\/refs\/tags\/v//')
        echo "version=${CURRENT_VERSION}" >> "$GITHUB_OUTPUT"
        echo "Current formula version: ${CURRENT_VERSION}"
    
    - name: Compare versions
      id: compare
      run: |
        if [ "${{ steps.latest-release.outputs.version }}" != "${{ steps.current-version.outputs.version }}" ]; then
          echo "update_needed=true" >> "$GITHUB_OUTPUT"
          echo "New version available: ${{ steps.latest-release.outputs.version }}"
        else
          echo "update_needed=false" >> "$GITHUB_OUTPUT"
          echo "Formula is up to date"
        fi
    
    - name: Create Pull Request for update
      if: steps.compare.outputs.update_needed == 'true'
      uses: peter-evans/create-pull-request@v6
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "Update scalr formula to version ${{ steps.latest-release.outputs.version }}"
        title: "Update scalr to version ${{ steps.latest-release.outputs.version }}"
        body: |
          ## ðŸš€ New scalr-cli version available
          
          This PR updates the scalr formula from version `${{ steps.current-version.outputs.version }}` to `${{ steps.latest-release.outputs.version }}`.
          
          ### Changes
          - Updates URL to point to new release tarball
          - Updates SHA256 checksum for the new version
          
          ### Manual Steps Required
          1. Review the changes
          2. Merge this PR if everything looks good
          3. Optionally trigger the "Update Formula and Publish Release" workflow to create bottles
          
          ---
          *This PR was created automatically by the auto-update workflow.*
        branch: "update-scalr-${{ steps.latest-release.outputs.version }}"
        delete-branch: true
    
    - name: Update formula if new version found
      if: steps.compare.outputs.update_needed == 'true'
      run: |
        chmod +x ./update-formula.sh
        ./update-formula.sh ${{ steps.latest-release.outputs.version }} 