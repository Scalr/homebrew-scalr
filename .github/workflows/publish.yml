name: Update Formula and Publish Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Scalr CLI version to update to (e.g., 0.17.4)'
        required: true
        type: string

jobs:
  update-and-publish:
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.HOMEBREW_PAT }}
        persist-credentials: true
    
    - name: Set up Homebrew
      id: set-up-homebrew
      uses: Homebrew/actions/setup-homebrew@master
    
    - name: Update formula to new version
      run: |
        chmod +x ./update-formula.sh
        ./update-formula.sh ${{ github.event.inputs.version }}
    
    - name: Test updated formula
      run: |
        brew install --build-from-source scalr/scalr/scalr
        brew test scalr
        brew uninstall scalr
    
    - name: Commit updated formula
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add Formula/scalr.rb
        git commit -m "Update scalr formula to version ${{ github.event.inputs.version }}"
        git tag -a "v${{ github.event.inputs.version }}" -m "Release version ${{ github.event.inputs.version }}"
    
    - name: Configure git for pushing
      run: |
        git config --local url.https://x-access-token:${{ secrets.HOMEBREW_PAT }}@github.com/.insteadOf https://github.com/
    
    - name: Push changes and tags
      run: |
        git push origin main
        git push origin "v${{ github.event.inputs.version }}"
    
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: "v${{ github.event.inputs.version }}"
        name: "Release v${{ github.event.inputs.version }}"
        body: |
          Updated scalr formula to version ${{ github.event.inputs.version }}
          
          Install with:
          ```bash
          brew tap Scalr/scalr
          brew install scalr
          ```
          
          **Note**: Bottles (pre-compiled binaries) can be built separately if needed.
        draft: false
        prerelease: false